(1).CREATE  TABLE IF NOT EXISTS `peopleconnect`.`ARCHIVE_VOTES` (
  `QUESTION_ID` INT NOT NULL AUTO_INCREMENT ,
  `OPTION_1` FLOAT NULL ,
  `OPTION_2` FLOAT NULL ,
  `OPTION_3` FLOAT NULL ,
  `OPTION_4` FLOAT NULL ,
  `OPTION_5` FLOAT NULL ,
  `NUMBER_OF_VOTERS` INT NOT NULL ,
  PRIMARY KEY (`QUESTION_ID`) ,
  INDEX `FK_QUESTION` (`QUESTION_ID` ASC) ,
    FOREIGN KEY (`QUESTION_ID` )
    REFERENCES `peopleconnect`.`PUBLIC_QUESTIONS` (`QUESTION_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE);

(2).CREATE  TABLE IF NOT EXISTS `peopleconnect`.`AREA` (
  `AREA_ID` INT NOT NULL AUTO_INCREMENT ,
  `AREA_NAME` VARCHAR(200) NULL ,
  `LAYOUT_ID` INT NULL ,
  PRIMARY KEY (`AREA_ID`) ,
  INDEX `FK_LAYOUT` (`LAYOUT_ID` ASC) ,
  CONSTRAINT `FK_LAYOUT`
    FOREIGN KEY (`LAYOUT_ID` , `AREA_ID` )
    REFERENCES `peopleconnect`.`LAYOUTS` (`LAYOUT_ID` , `LAYOUT_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE);

(3).CREATE  TABLE IF NOT EXISTS `peopleconnect`.`AUTHORITIES` (
  `AUTHORITY_ID` INT NOT NULL AUTO_INCREMENT ,
  `USER_NAME` VARCHAR(500) NULL ,
  `PASSWORD` VARCHAR(1000) NULL ,
  `EMAIL_ID` VARCHAR(500) NULL ,
  `PHONE_NUMBER` VARCHAR(20) NULL ,
  `LAST_LOGGED_IN` DATETIME NULL ,
  `SUCCESSFUL_COMPLAINTS` INT NULL ,
  PRIMARY KEY (`AUTHORITY_ID`) );

(4).CREATE  TABLE IF NOT EXISTS `peopleconnect`.`AUTHORITY_CATEGORY_MAPPING` (
  `AUTHORITY_ID` INT NOT NULL ,
  `CATEGORY_ID` INT NOT NULL ,
  PRIMARY KEY (`AUTHORITY_ID`, `CATEGORY_ID`) ,
  INDEX `FK_CATEGORY` (`CATEGORY_ID` ASC) ,
  INDEX `FK_AUTHORITY` (`AUTHORITY_ID` ASC) ,
  CONSTRAINT `FK_CATEGORY`
    FOREIGN KEY (`CATEGORY_ID` )
    REFERENCES `peopleconnect`.`CATEGORIES` (`CATEGORY_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FK_AUTHORITY`
    FOREIGN KEY (`AUTHORITY_ID` )
    REFERENCES `peopleconnect`.`AUTHORITIES` (`AUTHORITY_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE);

(5).CREATE  TABLE IF NOT EXISTS `peopleconnect`.`CATEGORIES` (
  `CATEGORY_ID` INT NOT NULL AUTO_INCREMENT ,
  `CATEGORY_NAME` VARCHAR(200) NULL ,
  PRIMARY KEY (`CATEGORY_ID`) );


(6).CREATE  TABLE IF NOT EXISTS `peopleconnect`.`CITY` (
  `CITY_ID` INT NOT NULL AUTO_INCREMENT ,
  `STATE_ID` INT NULL ,
  `CITY_NAME` VARCHAR(100) NULL ,
  PRIMARY KEY (`CITY_ID`) ,
  INDEX `FK_STATE` (`STATE_ID` ASC) ,
  CONSTRAINT `FK_STATE`
    FOREIGN KEY (`STATE_ID` )
    REFERENCES `peopleconnect`.`STATES` (`STATE_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE);


(7).CREATE  TABLE IF NOT EXISTS `peopleconnect`.`COMMENTS` (
  `COMMENT_ID` INT NOT NULL AUTO_INCREMENT ,
  `COMPLAINT_ID` INT NULL ,
  `COMMENT_BODY` VARCHAR(5000) NULL ,
  `POSTED_ON` DATETIME NULL ,
  `POSTED_BY` INT NULL ,
  PRIMARY KEY (`COMMENT_ID`) ,
  INDEX `FK_COMPLAINT` (`COMPLAINT_ID` ASC) ,
  INDEX `FK_USER_ID` (`POSTED_BY` ASC) ,
    FOREIGN KEY (`COMPLAINT_ID` )
    REFERENCES `peopleconnect`.`COMPLAINTS` (`COMPLAINT_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    FOREIGN KEY (`POSTED_BY` )
    REFERENCES `peopleconnect`.`USERS` (`USER_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

(8).CREATE  TABLE IF NOT EXISTS `peopleconnect`.`COMPLAINTS` (
  `COMPLAINT_ID` INT NOT NULL AUTO_INCREMENT ,
  `COMPLAINT_BODY` VARCHAR(5000) NULL ,
  `COMPLAINT_LOCATION` VARCHAR(500) NULL ,
  `COMPLAINED_BY` INT NULL ,
  `STATUS` VARCHAR(100) NULL ,
  `COMPLAINED_ON` DATETIME NULL ,
  `IMAGE` BINARY NULL ,
  `VIDEO` BINARY NULL ,
  `CATEGORY` INT NULL ,
  PRIMARY KEY (`COMPLAINT_ID`) ,
  INDEX `FK_USER_ID` (`COMPLAINED_BY` ASC) ,
  INDEX `FK_CATEGORY` (`CATEGORY` ASC) ,
    FOREIGN KEY (`COMPLAINED_BY` )
    REFERENCES `peopleconnect`.`USERS` (`USER_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    FOREIGN KEY (`CATEGORY` )
    REFERENCES `peopleconnect`.`CATEGORIES` (`CATEGORY_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE);

(9).CREATE  TABLE IF NOT EXISTS `peopleconnect`.`LAYOUTS` (
  `LAYOUT_ID` INT NOT NULL AUTO_INCREMENT ,
  `LAYOUT_NAMR` VARCHAR(100) NULL ,
  `CITY_ID` INT NULL ,
  PRIMARY KEY (`LAYOUT_ID`) ,
  INDEX `FK_CITY` (`CITY_ID` ASC) ,
  CONSTRAINT `FK_CITY`
    FOREIGN KEY (`CITY_ID` )
    REFERENCES `peopleconnect`.`CITY` (`CITY_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE);

(10).CREATE  TABLE IF NOT EXISTS `peopleconnect`.`PUBLIC_QUESTIONS` (
  `QUESTION_ID` INT NOT NULL AUTO_INCREMENT ,
  `QUESTION_BODY` VARCHAR(6000) NULL ,
  `OPTION_1` VARCHAR(2000) NULL ,
  `OPTION_2` VARCHAR(2000) NULL ,
  `OPTION_3` VARCHAR(2000) NULL ,
  `OPTION_4` VARCHAR(2000) NULL ,
  `OPTION_5` VARCHAR(2000) NULL ,
  `STATE_ID` INT NULL ,
  `CITY_ID` INT NULL ,
  `AREA_ID` INT NULL ,
  `CLOSE_DATE` DATETIME NULL ,
  `IMAGE` BINARY NULL ,
  PRIMARY KEY (`QUESTION_ID`) ,
  INDEX `FK_STATE_ID` (`STATE_ID` ASC) ,
  INDEX `FK_CITY` (`CITY_ID` ASC) ,
  INDEX `FK_AREA` (`AREA_ID` ASC) ,
    FOREIGN KEY (`STATE_ID` )
    REFERENCES `peopleconnect`.`STATES` (`STATE_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (`CITY_ID` )
    REFERENCES `peopleconnect`.`CITY` (`CITY_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (`AREA_ID` )
    REFERENCES `peopleconnect`.`AREA` (`AREA_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE);

(11).CREATE  TABLE IF NOT EXISTS `peopleconnect`.`STATES` (
  `STATE_ID` INT NOT NULL AUTO_INCREMENT,
  `STATE_NAME` VARCHAR(100) NULL ,
  PRIMARY KEY (`STATE_ID`) );

(12).CREATE  TABLE IF NOT EXISTS `peopleconnect`.`USERS` (
  `USER_ID` INT NOT NULL AUTO_INCREMENT ,
  `NAME` VARCHAR(500) NULL ,
  `DOOR_NO` VARCHAR(200) NULL ,
  `STREET` VARCHAR(500) NULL ,
  `LAYOUT` VARCHAR(500) NULL ,
  `AREA_ID` INT NULL ,
  `CITY_ID` INT NULL ,
  `PINCODE` INT NULL ,
  `STATE_ID` INT NULL ,
  `PHONE_NUMBER` VARCHAR(20) NULL ,
  `EMAIL_ID` VARCHAR(200) NULL ,
  `ALTERNATE_PHONE_NUMBER` VARCHAR(20) NULL ,
  `LAST_VIEWED` DATETIME NULL ,
  `POINTS` INT NULL ,
  `LEVEL` INT NULL ,
  `PASSWORD` VARCHAR(1000) NULL ,
  PRIMARY KEY (`USER_ID`) ,
  INDEX `FK_AREA` (`AREA_ID` ASC) ,
  INDEX `FK_CITY` (`CITY_ID` ASC) ,
  INDEX `FK_STATE` (`STATE_ID` ASC) ,
    FOREIGN KEY (`AREA_ID` )
    REFERENCES `peopleconnect`.`AREA` (`AREA_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (`CITY_ID` )
    REFERENCES `peopleconnect`.`CITY` (`CITY_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    FOREIGN KEY (`STATE_ID` )
    REFERENCES `peopleconnect`.`STATES` (`STATE_ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

(13).CREATE  TABLE IF NOT EXISTS `peopleconnect`.`VOTES` (
  `VOTE_ID` INT NOT NULL AUTO_INCREMENT ,
  `QUESTION_ID` INT NULL ,
  `OPTION` INT NULL ,
  `USER_ID` INT NULL ,
  PRIMARY KEY (`VOTE_ID`) ,
  INDEX `FK_QUESTION` (`QUESTION_ID` ASC) ,
  INDEX `FK_USER_ID` (`USER_ID` ASC) ,
    FOREIGN KEY (`QUESTION_ID` )
    REFERENCES `peopleconnect`.`PUBLIC_QUESTIONS` (`QUESTION_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (`USER_ID` )
    REFERENCES `peopleconnect`.`USERS` (`USER_ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE);
